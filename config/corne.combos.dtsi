#include <zmk-helpers/helper.h>
#include "keymap.layout.h"

#define DEF 0

/*                         KEY POSITIONS
  ╭─────────────────────────╮         ╭─────────────────────────╮
  │ ATL TL4 TL3 TL2 TL1 TL0 │         │ TR0 TR1 TR2 TR3 TR4 ATR │
  │ AML ML4 ML3 ML2 ML1 ML0 │         │ MR0 MR1 MR2 MR3 MR4 AMR │
  │ ABL BL4 BL3 BL2 BL1 BL0 ╰───╮ ╭───╯ BR0 BR1 BR2 BR3 BR4 ABR │
  ╰───────────────╮ HL1 HL0 HLT │ │ HRT HR0 HR1 ╭───────────────╯
                  ╰─────────────╯ ╰─────────────╯ */

// äÄ (fast)
ZMK_LEADER_SEQUENCE_4(altgrASpace,      &uc 00E4, HR1 ML4 HRT,     DEF)
ZMK_LEADER_SEQUENCE_4(altgrShiftASpace, &uc 00C4, HR1 HLT ML4 HRT, DEF)

// áÁ
ZMK_LEADER_SEQUENCE_4(altgrAQ,      &uc 00E1, HR1 ML4 TL4,     DEF)
ZMK_LEADER_SEQUENCE_4(altgrShiftAQ, &uc 00C1, HR1 HLT ML4 TL4, DEF)

// àÀ
ZMK_LEADER_SEQUENCE_4(altgrAW,      &uc 00E0, HR1 ML4 TL3,     DEF)
ZMK_LEADER_SEQUENCE_4(altgrShiftAW, &uc 00C0, HR1 HLT ML4 TL3, DEF)

// äÄ
// ZMK_LEADER_SEQUENCE_4(altgrAF,      &uc 00E4, RALT A F,       DEF)
// ZMK_LEADER_SEQUENCE_4(altgrShiftAF, &uc 00C4, RALT LSHFT A F, DEF)

// ßẞ (fast)
// ZMK_LEADER_SEQUENCE_4(altgrSSpace,      &uc 00DF, RALT S SPACE,       DEF)
// ZMK_LEADER_SEQUENCE_4(altgrShiftSSpace, &uc 1E9E, RALT LSHFT S SPACE, DEF)

// ßẞ
// ZMK_LEADER_SEQUENCE_4(altgrSQ,      &uc 00DF, RALT S Q,       DEF)
// ZMK_LEADER_SEQUENCE_4(altgrShiftSQ, &uc 1E9E, RALT LSHFT S Q, DEF)


// Deprecated ( OLD ), do not use...
// ZMK_COMBO(altgr_a_space,       &uc 00E4, RALT A SPACE,  DEF, COMBO_TERM_SHORT, COMBO_IDLE)
// ZMK_COMBO(altgr_shift_a_space, &uc 00C4, RALTL A SPACE, DEF, COMBO_TERM_LONG,  COMBO_IDLE)
//
// ZMK_COMBO(altgr_a_q,           &uc 00E4, RALT A Q,      DEF, COMBO_TERM_SHORT, COMBO_IDLE)
// ZMK_COMBO(altgr_shift_a_q,     &uc 00E4, RALTL A Q,     DEF, COMBO_TERM_LONG,  COMBO_IDLE)
//
// ZMK_COMBO(altgr_a_w,           &uc 00E4, RALT A W,      DEF, COMBO_TERM_SHORT, COMBO_IDLE)
// ZMK_COMBO(altgr_shift_a_w,     &uc 00E4, RALTL A W,     DEF, COMBO_TERM_LONG,  COMBO_IDLE)
//
// ZMK_COMBO(altgr_a_f,           &uc 00E4, RALT A F,      DEF, COMBO_TERM_SHORT, COMBO_IDLE)
// ZMK_COMBO(altgr_shift_a_f,     &uc 00E4, RALTL A F,     DEF, COMBO_TERM_LONG,  COMBO_IDLE)
